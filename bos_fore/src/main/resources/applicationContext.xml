<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xmlns:context="http://www.springframework.org/schema/context"
        xmlns:jaxws="http://cxf.apache.org/jaxws"
        xsi:schemaLocation="http://www.springframework.org/schema/beans
        		http://www.springframework.org/schema/beans/spring-beans.xsd
             	http://www.springframework.org/schema/context
             	http://www.springframework.org/schema/context/spring-context.xsd     
        		http://cxf.apache.org/jaxws
				http://cxf.apache.org/schemas/jaxws.xsd">

	<!-- 开启包扫描 -->
	<context:component-scan base-package="com.yapengren.bos.action"></context:component-scan>

	<!-- jedis 连接池配置 -->
	 <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
	 	<!-- 连接的最大空闲时间 -->
        <property name="maxIdle" value="300" />
        <!-- 连接最长等待时间 -->
        <property name="maxWaitMillis" value="3000" />
        <!-- 是否测试获得的连接 -->
        <property name="testOnBorrow" value="true" />
    </bean>

	<!-- jedis 连接工厂 -->
	<bean id="redisConnectionFactory"
        class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
       	<!-- redis服务器路径 -->
        <property name="hostName" value="bos-redisServer"/>
        <!-- redis服务器端口号 -->
        <property name="port" value="6379"/>
        <!-- 指定连接池配置 -->
        <property name="poolConfig" ref="poolConfig"/>
    </bean>

    <!-- spring data 提供 redis模板  -->
    <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
    	<!-- 指定连接工厂 -->
        <property name="connectionFactory" ref="redisConnectionFactory" />
        <!-- 键的持久化类 -->
        <property name="keySerializer">
            <bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
        </property>
        <!-- 值的持久化类 -->
        <property name="valueSerializer">
        	<bean class="org.springframework.data.redis.serializer.StringRedisSerializer">
        	</bean>
        </property>
    </bean>

	<!-- ======================= -->
    <!--配置 crm 客户端：crm =》 bos-fore-->
	<jaxws:client id="customerService" address="http://localhost:8111/crm/service/customer"
		serviceClass="com.yapengren.crm.service.impl.CustomerServiceImpl"></jaxws:client>

    <!--配置 bos-management 客户端：bos-management=》 bos-fore-->
	<jaxws:client id="orderService" address="http://localhost:8110/bos_management_web/service/order"
		serviceClass="com.yapengren.bos.service.take_delivery.impl.OrderServiceImpl"></jaxws:client>
	<!-- ======================= -->

    <!---->
	<!--&lt;!&ndash; ActiveMQ 连接工厂 &ndash;&gt;-->
	<!--&lt;!&ndash; 真正可以产生Connection 的ConnectionFactory，由对应的JMS 服务厂商提供 &ndash;&gt;-->
    <!--&lt;!&ndash;<amq:connectionFactory id="amqConnectionFactory"&ndash;&gt;-->
        <!--&lt;!&ndash;brokerURL="tcp://localhost:61616" userName="admin" password="admin" />&ndash;&gt;-->
    <!--<bean id="amqConnectionFactory" class="org.apache.activemq.spring.ActiveMQConnectionFactory">-->
        <!--<property name = "brokerURL" value="tcp://localhost:61616" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; Spring Caching 连接工厂 &ndash;&gt;-->
    <!--&lt;!&ndash; Spring 用于管理真正的ConnectionFactory 的ConnectionFactory &ndash;&gt;-->
    <!--<bean id="connectionFactory" class="org.springframework.jms.connection.CachingConnectionFactory">-->
        <!--&lt;!&ndash; 目标ConnectionFactory 对应真实的可以产生JMS Connection 的ConnectionFactory &ndash;&gt;-->
        <!--<property name="targetConnectionFactory" ref="amqConnectionFactory"></property>-->
        <!--&lt;!&ndash; 同上，同理&ndash;&gt;-->
        <!--&lt;!&ndash; <constructor-arg ref="amqConnectionFactory" /> &ndash;&gt;-->
        <!--&lt;!&ndash; Session 缓存数量&ndash;&gt;-->
        <!--<property name="sessionCacheSize" value="100" />-->
    <!--</bean>-->

    <!--&lt;!&ndash; 定义JMSTemplate 的Queue类型&ndash;&gt;-->
    <!--<bean id="jmsQueueTemplete" class="org.springframework.jms.core.JmsTemplate">-->
        <!--&lt;!&ndash;这个connectionFactory 对应的是我们定义的Spring 提供的那个connectionFactory 对象&ndash;&gt;-->
        <!--<property name="connectionFactory" ref="connectionFactory"></property>-->
        <!--&lt;!&ndash;非pub/sub 模型（发布订阅），即队列模式&ndash;&gt;-->
        <!--<property name="pubSubDomain" value="false" />-->
    <!--</bean>-->
    <!---->
    <!---->
</beans>